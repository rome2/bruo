////////////////////////////////////////////////////////////////////////////////
// (c) 2013 Rolf Meyerhoff. All rights reserved.
////////////////////////////////////////////////////////////////////////////////
///\file    shortcutdialog.h
///\ingroup bruo
///\brief   Shortcut editor dialog definition.
///\author  Rolf Meyerhoff (badlantic@gmail.com)
///\version 1.0
/// This file is part of the bruo audio editor.
////////////////////////////////////////////////////////////////////////////////
///\par License:
/// This program is free software: you can redistribute it and/or modify it
/// under the terms of the GNU General Public License as published by the Free
/// Software Foundation, either version 2 of the License, or (at your option)
/// any later version.
///\par
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even  the implied warranty of MERCHANTABILITY or
/// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
/// more details.
///\par
/// You should have received a copy of the GNU General Public License along with
/// this program; see the file COPYING. If not, see http://www.gnu.org/licenses/
/// or write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
/// Floor, Boston, MA 02110-1301, USA.
////////////////////////////////////////////////////////////////////////////////
#ifndef __SHORTCUTDIALOG_H_INCLUDED__
#define __SHORTCUTDIALOG_H_INCLUDED__

#include <QDialog>
#include <QTableWidget>
#include <QAction>
#include <QComboBox>
#include "keymap.h"

////////////////////////////////////////////////////////////////////////////////
///\class ShortcutDialog shortcutdialog.h
///\brief A shortcut editing dialog.
////////////////////////////////////////////////////////////////////////////////
class ShortcutDialog : public QDialog
{
  Q_OBJECT // Qt magic...

public:
  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::ShortcutDialog()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief   Initialization constructor of this window.
  ///\param   [in] actionMap: The action list to edit.
  ///\param   [in] parent:    Parent window for this window.
  ///\remarks Basically initializes the gui.
  //////////////////////////////////////////////////////////////////////////////
  explicit ShortcutDialog(QHash<QString, QAction*>& actionMap, QWidget* parent = 0);

public slots:

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::itemSelectionChanged()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the shortcut table's selection changed event.
  //////////////////////////////////////////////////////////////////////////////
  void itemSelectionChanged();

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::searchTextChanged()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the search text box changed event.
  ///\param [in] text: The search text.
  //////////////////////////////////////////////////////////////////////////////
  void searchTextChanged(QString text);

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::assign()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the assign button clicked event.
  //////////////////////////////////////////////////////////////////////////////
  void assign();

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::restore()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the restore button clicked event.
  //////////////////////////////////////////////////////////////////////////////
  void restore();

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::accept()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the ok button clicked event.
  //////////////////////////////////////////////////////////////////////////////
  void accept();

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::presetChanged()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the preset combo box selection changed event.
  ///\param [in] newID: The index of the selected preset.
  //////////////////////////////////////////////////////////////////////////////
  void presetChanged(int newID);

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutDialog::save()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Handler for the save button clicked event.
  //////////////////////////////////////////////////////////////////////////////
  void save();

private:
  //////////////////////////////////////////////////////////////////////////////
  // Member:
  QTableWidget*       m_tableWidget; ///> The shortcut table.
  class ShortcutEdit* m_scEdit;      ///> The editor for the shortcuts.
  QPushButton*        m_assignBtn;   ///> The assign button.
  QPushButton*        m_restoreBtn;  ///> The restore button.
  QList<Keymap>       m_maps;        ///> Key map presets.
  QComboBox*          m_presetCombo; ///> The preset combo box.
};

#endif // #ifndef __SHORTCUTDIALOG_H_INCLUDED__
///////////////////////////////// End of File //////////////////////////////////
