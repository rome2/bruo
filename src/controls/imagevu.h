////////////////////////////////////////////////////////////////////////////////
// (c) 2014 Rolf Meyerhoff. All rights reserved.
////////////////////////////////////////////////////////////////////////////////
///\file    imagevu.h
///\ingroup bruo
///\brief   Image based LED VU widget definition.
///\author  Rolf Meyerhoff (rm@matrix44.de)
///\version 1.0
/// This file is part of the bruo audio editor.
////////////////////////////////////////////////////////////////////////////////
///\par License:
/// This program is free software: you can redistribute it and/or modify it
/// under the terms of the GNU General Public License as published by the Free
/// Software Foundation, either version 2 of the License, or (at your option)
/// any later version.
///\par
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even  the implied warranty of MERCHANTABILITY or
/// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
/// more details.
///\par
/// You should have received a copy of the GNU General Public License along with
/// this program; see the file COPYING. If not, see http://www.gnu.org/licenses/
/// or write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
/// Floor, Boston, MA 02110-1301, USA.
////////////////////////////////////////////////////////////////////////////////
#ifndef __IMAGEVU_H_INCLUDED__
#define __IMAGEVU_H_INCLUDED__

#include "imagewidget.h"

////////////////////////////////////////////////////////////////////////////////
///\class ImageVU imagevu.h
///\brief An image based LED VU control.
/// This widget is just a simple LED VU display.
////////////////////////////////////////////////////////////////////////////////
class ImageVU :
  public ImageWidget
{
  Q_OBJECT// Qt magic...

public:

  //////////////////////////////////////////////////////////////////////////////
  // ImageVU::ImageVU()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief   Default constructor of this widget.
  ///\param   [in] parent: Parent window for this widget.
  ///\remarks Just initializes the members.
  //////////////////////////////////////////////////////////////////////////////
  ImageVU(QWidget* parent = 0);

  //////////////////////////////////////////////////////////////////////////////
  // ImageVU::~ImageVU()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief   Destructor of this window.
  ///\remarks Cleans up used resources.
  //////////////////////////////////////////////////////////////////////////////
  virtual ~ImageVU();

  //////////////////////////////////////////////////////////////////////////////
  // ImageVU::value()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief   Get accessor for the Value property.
  ///\return  The current value of this VU meter.
  ///\remarks The value is either true or false.
  //////////////////////////////////////////////////////////////////////////////
  double value() const;

  //////////////////////////////////////////////////////////////////////////////
  // ImageVU::setValue()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief   Set accessor for the Value property.
  ///\param   [in] newVal: The new value of this VU meter.
  ///\remarks The widget will be repainted.
  //////////////////////////////////////////////////////////////////////////////
  void setValue(const double newVal);

protected:

  //////////////////////////////////////////////////////////////////////////////
  // ImageVU::drawWidget()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Internal helper that paints the actual widget.
  ///\param [in] qp: Device context to use.
  //////////////////////////////////////////////////////////////////////////////
  virtual void drawWidget(QPainter& qp);

private:

  //////////////////////////////////////////////////////////////////////////////
  // Member:
  double m_value; ///\> The current value of this vu meter.
};

#endif // __IMAGEVU_H_INCLUDED__
///////////////////////////////// End of File //////////////////////////////////
