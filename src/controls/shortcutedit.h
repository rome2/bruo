////////////////////////////////////////////////////////////////////////////////
// (c) 2013 Rolf Meyerhoff. All rights reserved.
////////////////////////////////////////////////////////////////////////////////
///\file    shortcutedit.h
///\ingroup bruo
///\brief   Shortcut edit control definition.
///\author  Rolf Meyerhoff (badlantic@gmail.com)
///\version 1.0
/// This file is part of the bruo audio editor.
////////////////////////////////////////////////////////////////////////////////
///\par License:
/// This program is free software: you can redistribute it and/or modify it
/// under the terms of the GNU General Public License as published by the Free
/// Software Foundation, either version 2 of the License, or (at your option)
/// any later version.
///\par
/// This program is distributed in the hope that it will be useful, but WITHOUT
/// ANY WARRANTY; without even  the implied warranty of MERCHANTABILITY or
/// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
/// more details.
///\par
/// You should have received a copy of the GNU General Public License along with
/// this program; see the file COPYING. If not, see http://www.gnu.org/licenses/
/// or write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth
/// Floor, Boston, MA 02110-1301, USA.
////////////////////////////////////////////////////////////////////////////////
#ifndef __SHORTCUTEDIT_H_INCLUDED__
#define __SHORTCUTEDIT_H_INCLUDED__

#include <QLineEdit>

////////////////////////////////////////////////////////////////////////////////
///\class ShortcutEdit shortcutedit.h
///\brief A small QLineEdit variation that allows entering of shortcuts.
////////////////////////////////////////////////////////////////////////////////
class ShortcutEdit : public QLineEdit
{
  Q_OBJECT // Qt magic...

public:
  //////////////////////////////////////////////////////////////////////////////
  // ShortcutEdit::ShortcutEdit()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief   Initialization constructor of this window.
  ///\param   [in] parent: Parent window for this window.
  ///\remarks Basically initializes the gui.
  //////////////////////////////////////////////////////////////////////////////
  explicit ShortcutEdit(QWidget* parent = 0);

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutEdit::shortcut()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief  Access the current shortcut of this control.
  ///\return The currently set key sequence (may be empty).
  //////////////////////////////////////////////////////////////////////////////
  QKeySequence shortcut() const;

  //////////////////////////////////////////////////////////////////////////////
  // ShortcutEdit::setShortcut()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Set the current shortcut of this control.
  ///\param [in] sc: The new key sequence (may be empty).
  //////////////////////////////////////////////////////////////////////////////
  void setShortcut(QKeySequence sc);

protected:
  //////////////////////////////////////////////////////////////////////////////
  // ShortcutEdit::keyPressEvent()
  //////////////////////////////////////////////////////////////////////////////
  ///\brief Reimplemented keypress event handler.
  ///\param [in] event: Provides details about the event.
  //////////////////////////////////////////////////////////////////////////////
  void keyPressEvent(QKeyEvent* event);

private:
  //////////////////////////////////////////////////////////////////////////////
  // Member:
  QKeySequence m_shortcut; ///> The current short cut.
};

#endif // #ifndef __SHORTCUTEDIT_H_INCLUDED__
///////////////////////////////// End of File //////////////////////////////////
